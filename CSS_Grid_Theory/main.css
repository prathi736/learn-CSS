.container {
    margin: 20px;
    display: grid;
    /* grid-template-columns: 200px 1fr 30% 1fr; */
    grid-template-columns: repeat(4, 25%);
    /* grid-template-rows: 4rem auto; */
    grid-template-rows: [row-1-start] 4rem [row-1-end row-2-start] minmax(50px, auto) [row-2-end row-3-start] 100px [row-3-end];
    /* Way to apply gap between columns and rows in grid */
    /* column-gap: 20px;
    row-gap: 15px; */
    /* Shorthand to apply gaps between columns and rows in grid */
    /* gap: 20px 15px; */
    /* if only one value is given, same value is applied to both rows and columns */
    gap: 20px;
    /* gap: column-gap row-gap */
}

.el1 {
    background: rgba(255, 154, 72, 0.5);
}

.el2 {
    background: rgba(255, 0, 0, 0.5);
    /* grid-column-start: 1;
    grid-column-end: -1; */
    /* grid-row-start: 2; */
    /* grid-row-start: row-2-start;
    grid-row-end: span 1; */
    /* shorthand for grid-row and grid-column */
    grid-column: 1/-1;
    grid-row: row-2-start/span 1;
    z-index: 1; /*Element 2 comes above element 3*/
}

.el3 {
    background: rgba(0, 128, 0, 0.5);
    grid-column-start: 2;
    /* grid-column-end: 5; */
    grid-column-end: span 3;
    grid-row-start: row-1-start;
    grid-row-end: row-2-end;
    /* shorthand for grid-row and grid-column in one thing i.e. grid-area */
    grid-area: row-1-start / 2 / row-2-end / span 3;
    /* grid-area: grid-row-start/ grid-column-start / grid-row-end / grid-column-end; */
}

.el4 {
    background: rgba(0, 4, 255, 0.5);
}